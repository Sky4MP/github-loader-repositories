{"version":3,"sources":["services/api.js","components/Container/index.js","pages/Main/styles.js","pages/Main/index.js","pages/Repository/styles.js","pages/Repository/index.js","routes.js","styles/global.js","components/PageTitle/index.js","App.js","index.js"],"names":["api","axios","create","baseURL","Container","styled","div","Form","form","rotate","keyframes","SubmitButton","button","attrs","props","type","disabled","loading","css","List","ul","Main","useState","newRepo","setNewRepo","JSON","parse","localStorage","getItem","repositories","setRepositories","setLoading","e","a","preventDefault","get","response","data","name","full_name","console","log","useEffect","setItem","stringify","onSubmit","value","onChange","target","placeholder","color","size","map","repository","index","key","to","encodeURIComponent","onClick","newRepositories","splice","removeRepository","className","Loading","Owner","IssueList","Repository","match","setRepository","repoName","setRepoName","issues","setIssues","Promise","all","params","state","per_page","decodeURIComponent","getRepositoriesFromAPI","src","owner","avatar_url","alt","login","description","rel","href","length","issue","String","id","user","html_url","title","Routes","basename","process","exact","path","component","createGlobalStyle","App","PageTitle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c18a2359.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.github.com'\r\n})\r\n\r\nexport default api","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    max-width: 700px;\r\n    background: #FFF;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);\r\n    padding: 30px;\r\n    margin: 30px auto;\r\n\r\n    h1 {\r\n        font-size: 20px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n    }\r\n\r\n    svg {\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nexport default Container","import styled, { keyframes, css } from 'styled-components'\r\n\r\nexport const Form = styled.form`\r\n    margin-top: 30px;\r\n    display: flex;\r\n    flex-direction: row;\r\n\r\n    input {\r\n        flex: 1;\r\n        border: 1px solid #eee;\r\n        padding: 10px 15px;\r\n        border-radius: 4px;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst rotate = keyframes`\r\n    from { \r\n        transform: rotate(0deg)\r\n     }\r\n     to {\r\n        transform: rotate(360deg)\r\n     }\r\n`;\r\n\r\nexport const SubmitButton = styled.button.attrs(props => ({\r\n    type: 'submit',\r\n    disabled: props.loading\r\n}))`\r\n    background: #227093;\r\n    border: 0;\r\n    padding: 0 15px;\r\n    margin-left: 10px;\r\n    border-radius: 4px;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &[disabled] {\r\n        cursor: not-allowed;\r\n        opacity: 0.6;\r\n    }\r\n\r\n    svg {\r\n        margin: 0\r\n    }\r\n\r\n    ${props => props.loading && css`\r\n        svg {\r\n            animation: ${rotate} 2s linear infinite;\r\n        }\r\n    `}\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    list-style: none;\r\n    margin-top: 30px;\r\n\r\n    li {\r\n        padding: 15px 0;\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n    }\r\n\r\n    li:not(:first-child) {\r\n        border-top: 1px solid #eee;\r\n    }\r\n\r\n    a {\r\n        color: #227093;\r\n        text-decoration: none;\r\n    }\r\n\r\n    .remove-btn {\r\n        color: #c0392b;\r\n        cursor: pointer;\r\n    }\r\n`;","import React, { useState, useEffect } from 'react'\r\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport Container from '../../components/Container'\r\nimport { Form, SubmitButton, List } from './styles'\r\n\r\nexport default function Main() {\r\n  const [newRepo, setNewRepo] = useState('')\r\n  const [repositories, setRepositories] = useState(JSON.parse(localStorage.getItem('repositories')) || [])\r\n  const [loading, setLoading] = useState(0)\r\n\r\n  useEffect(()=>localStorage.setItem('repositories', JSON.stringify(repositories)), [repositories])\r\n\r\n  function handleInputChange(e) {\r\n    setNewRepo(e.target.value)\r\n  }\r\n  \r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(1)\r\n    try {  \r\n      const response = await api.get(`/repos/${newRepo}`)\r\n      const data = { name: response.data.full_name }\r\n      setRepositories([...repositories, data])\r\n    } catch (e) {\r\n      console.log(e)\r\n    }\r\n    setNewRepo('')\r\n    setLoading(0)\r\n  }\r\n\r\n  function removeRepository(index) {\r\n    let newRepositories = [...repositories]\r\n    newRepositories.splice(index, 1)\r\n    setRepositories(newRepositories)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <h1>\r\n        <FaGithubAlt />\r\n        Repositories\r\n      </h1>\r\n      <Form onSubmit={handleSubmit}>\r\n        <input \r\n          value={newRepo} \r\n          onChange={handleInputChange}\r\n          type='text' \r\n          placeholder='Add repository' \r\n        />\r\n        <SubmitButton loading={loading}>\r\n          { loading ? (\r\n            <FaSpinner color='#FFF' size={14} />\r\n          ) : (\r\n          <FaPlus color='#FFF' size={14} />\r\n          )}\r\n        </SubmitButton>\r\n      </Form>\r\n\r\n      <List>\r\n        {repositories.map((repository, index) => (\r\n          <li key={index}>\r\n            <Link to={`/repository/${encodeURIComponent(repository.name)}`}>{repository.name}</Link>\r\n            <span onClick={()=>removeRepository(index)} className=\"remove-btn\">Remove</span>\r\n          </li>\r\n        ))}\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from 'styled-components';\r\n\r\nexport const Loading = styled.div`\r\n  color: #FFF;\r\n  font-size: 30px;\r\n  font-weight: bold;\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  margin-top: 60px;\r\n`;\r\n\r\nexport const Owner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    a:first-child {\r\n        color: #227093;\r\n        font-size: 16px;\r\n        text-decoration: none;\r\n    }\r\n    img {\r\n        width: 120px;\r\n        border-radius: 50%;\r\n        margin-top: 20px;\r\n    }\r\n    h1 {\r\n        font-size: 24px;\r\n        margin-top: 10px;\r\n    }\r\n    p{\r\n        margin-top: 10px;\r\n        font-size: 14px;\r\n        color: #555;\r\n        line-height: 1.4;\r\n        text-align: center;\r\n        max-width: 600px;\r\n    }\r\n    a {\r\n        color: #227093;\r\n        font-size: 14px;\r\n        text-decoration: none;\r\n        margin: 10px 0;\r\n    }\r\n`;\r\n\r\nexport const IssueList = styled.ul`\r\n    padding-top: 30px;\r\n    padding: 15px 10px;\r\n    border-top: 1px solid #eee;\r\n    list-style: none;\r\n\r\n    p.no-issues {\r\n        text-align: center;\r\n    }\r\n\r\n    h2 {\r\n        text-align: center;\r\n        padding: 10px 0;\r\n    }\r\n\r\n    li {\r\n        display: flex;\r\n        padding: 15px 10px;\r\n        border: 1px solid #eee;\r\n        border-radius: 4px;\r\n    }\r\n\r\n    li:not(:last-child) {\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    img {\r\n        width: 36px;\r\n        height: 36px;\r\n        border-radius: 50%;\r\n        border: 2px solid #eee;\r\n    }\r\n\r\n    div {\r\n        flex: 1;\r\n        margin-left: 15px;\r\n\r\n        strong {\r\n            font-size: 16px;\r\n\r\n            a {\r\n                text-decoration: none;\r\n                color: #333;\r\n\r\n                &:hover {\r\n                    color: #227093\r\n                }\r\n            }\r\n        }\r\n\r\n        p {\r\n            margin-top: 5px;\r\n            font-size: 12px;\r\n            color: #999;\r\n        }\r\n    }\r\n    a {\r\n        color: #227093;\r\n        font-size: 14px;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport api from '../../services/api'\r\n\r\nimport Container from '../../components/Container'\r\nimport { Loading, Owner, IssueList } from './styles'\r\n\r\nexport default function Repository({ match }) {\r\n  const [repository, setRepository] = useState({})\r\n  const [repoName, setRepoName] = useState({})\r\n  const [issues, setIssues] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  \r\n  useEffect(()=>{\r\n    setRepoName(decodeURIComponent(match.params.repository))\r\n    \r\n    async function getRepositoriesFromAPI(){\r\n      const [repository, issues] = await Promise.all([\r\n        api.get(`/repos/${repoName}`),\r\n        api.get(`/repos/${repoName}/issues`, {\r\n          params: {\r\n            state: 'open',\r\n            per_page: 5\r\n          }\r\n        }),\r\n      ])\r\n      setRepository(repository.data)\r\n      setIssues(issues.data)\r\n      setLoading(false)\r\n    }\r\n    getRepositoriesFromAPI()\r\n  },[match.params.repository, repoName])\r\n\r\n  if(loading) {\r\n    return <Loading>Loading...</Loading>\r\n  }\r\n\r\n  return (\r\n  <Container>\r\n    <Owner>\r\n      <Link to=\"/\">{\"← Back to repositories\"}</Link>\r\n      <img src={repository.owner.avatar_url} alt={repository.owner.login} />\r\n      <h1>{repository.name}</h1>\r\n      <p>{repository.description}</p>\r\n      <a rel=\"noopener noreferrer\" target='_blank' href={`https://github.com/${repoName}`}>Go to Github</a>\r\n    </Owner>\r\n    <IssueList>\r\n      <h2>Open Issues</h2>\r\n      {issues.length ? issues.map(issue => (\r\n        <li key={String(issue.id)}>\r\n          <img src={issue.user.avatar_url} alt={issue.user.login} />\r\n          <div>\r\n            <strong>\r\n              <a href={issue.html_url}>{issue.title}</a>\r\n            </strong>\r\n            <p>{issue.user.login}</p>\r\n          </div>\r\n        </li>\r\n      )) : <p className=\"no-issues\">There are no issues</p>}\r\n      <a rel=\"noopener noreferrer\" target='_blank' href={`https://github.com/${repoName}/issues`}>See more</a>\r\n    </IssueList>\r\n  </Container>\r\n  );\r\n}\r\n\r\nRepository.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      repository: PropTypes.string\r\n    })\r\n  }).isRequired\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Main from './pages/Main'\r\nimport Repository from './pages/Repository'\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Main} />\r\n                <Route path=\"/repository/:repository\" component={Repository} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport default createGlobalStyle`\r\n    * {\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    html, body, #root {\r\n        min-height: 100%;\r\n    }\r\n    body {\r\n        background: #227093;\r\n        -webkit-font-smoothing: antialiased !important;\r\n    }\r\n    body, input, button {\r\n        color: #222;\r\n        font-size: 14px;\r\n        font-family: Arial, Helvetica, sans-serif;\r\n    }\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n`","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    margin: auto;\r\n    margin-top: 80px;\r\n\r\n    text-align: center;\r\n    font-size: 30px;\r\n    color: #FFF;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport default Container","import React from 'react';\n\nimport Routes from './routes'\nimport GlobalStyle from './styles/global'\n\nimport PageTitle from './components/PageTitle'\n\nfunction App() {\n  return (\n    <>\n      <PageTitle>Github Loader Repositories</PageTitle>\n      <Routes />\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}